services:
  app-front:
    build:
      context: ./app-front
    ports:
      - "3000:3000"
    container_name: app-front
    command: npm run dev
    networks:
      - app-network
    environment:
      - VITE_API_URL=http://localhost:4000

  app-back:
    build:
      context: ./app-back
    ports:
      - "4000:4000"
    environment:
      - PORT=4000
      - DB_HOST=mysql
      - DB_PORT=3306
      - FRONTEND_URL=http://localhost:3000
      - DB_USER=milca
      - DB_PASSWORD=550e8400e29b41d4a716446655440000
      - DB_NAME=mimarket
    container_name: app-back
    depends_on:
      mysql:
        condition: service_healthy
    command: npm run test
    networks:
      - app-network

  mysql:
    image: mysql:9.3
    container_name: mysql-community
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: 550e8400e29b41d4a716446655440000
      MYSQL_DATABASE: mimarket
      MYSQL_USER: milca
      MYSQL_PASSWORD: 550e8400e29b41d4a716446655440000
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-proot"]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network

volumes:
  mysql_data:

networks:
  app-network:
    driver: bridge
